syntax = "proto3";

package services;

import "core/api/grpc/common.proto";

message ServiceAction {
    enum Enum {
        START = 0;
        STOP = 1;
        RESTART = 2;
        VALIDATE = 3;
    }
}

message ServiceDefaults {
    string model = 1;
    repeated string services = 2;
}

message ServiceActionRequest {
    int32 session_id = 1;
    int32 node_id = 2;
    string service = 3;
    ServiceAction.Enum action = 4;
}

message ServiceActionResponse {
    bool result = 1;
}

message ServiceConfig {
    map<string, string> templates = 1;
    map<string, string> config = 2;
}

message ServiceValidationMode {
    enum Enum {
        BLOCKING = 0;
        NON_BLOCKING = 1;
        TIMER = 2;
    }
}

message Service {
    string group = 1;
    string name = 2;
    repeated string executables = 3;
    repeated string dependencies = 4;
    repeated string directories = 5;
    repeated string files = 6;
    repeated string startup = 7;
    repeated string validate = 8;
    repeated string shutdown = 9;
    ServiceValidationMode.Enum validation_mode = 10;
    int32 validation_timer = 11;
    float validation_period = 12;
}

message ConfigMode {
    string name = 1;
    map<string, string> config = 2;
}

message GetServiceDefaultsRequest {
    string name = 1;
    int32 session_id = 2;
    int32 node_id = 3;
}

message GetServiceDefaultsResponse {
    map<string, string> templates = 1;
    map<string, common.ConfigOption> config = 2;
    repeated ConfigMode modes = 3;
}

message GetNodeServiceRequest {
    int32 session_id = 1;
    int32 node_id = 2;
    string name = 3;
}

message GetNodeServiceResponse {
    map<string, string> config = 1;
}

message GetServiceRenderedRequest {
    int32 session_id = 1;
    int32 node_id = 2;
    string name = 3;
}

message GetServiceRenderedResponse {
    map<string, string> rendered = 1;
}

message CreateServiceRequest {
  Service service = 1;
  map<string, string> templates = 2;
  bool recreate = 3;
}

message CreateServiceResponse {
  bool result = 1;
}
